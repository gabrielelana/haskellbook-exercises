# -*- eval: (org-babel-lob-ingest "./ob-haskell-common.org"); -*-

#+TITLE: Final Project

#+PROPERTY: header-args:haskell :results replace output
#+PROPERTY: header-args:haskell+ :noweb yes
#+PROPERTY: header-args:haskell+ :wrap EXAMPLE

* 31.01 Final Project
Write a ~fingerd~ server

* 31.02 Specification
[[https://tools.ietf.org/html/rfc1288][See RFC1288]]

* 31.03 Exploring Finger
[[file:chapter-31/fingerd/src/Main.hs::{-# LANGUAGE OverloadedStrings #-}][See implementation]]

* 31.04 Slightly Modernized Fingerd
...

* 31.05 Chapter Exercises
1. Try using ~sqlite3~ command line interface to add more users.
   - OK :-)
2. Write an executable separate from ~fingerd~ and ~debug~ that allows
   you to insert new users in the database.
   - Extract ~User~ module with data and database dependencies.
   - Create ~Fingerctl~ module and ~fingerctl~ executable to insert
     and update users in the database.
3. Add the ability to modify an existing user in the database.
   - See above.
4. Try creating a "control socket" bound to a different port that
   permits insert/update of users in the database.
   - Cheated a little bit by extending the protocol with ~/I~ (insert)
     command and ~/U~ (update) command. This was primarily to avoid to
     have to deal with ~forkIO~ because ~sqlite3~ is not thread safe,
     using ~forkIO~ meant to have to deal with some kind of
     synchronization that I would like to leave for another day :-)
